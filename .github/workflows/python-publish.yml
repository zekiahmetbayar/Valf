name: Docker

on:
  push:
    branches: ["main"]

    tags:
      - deb*
      - all*


jobs:
  # Run tests.
  prepare:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Run tests
        run: |
          if ! [ -f Dockerfile ]; then
            docker 
          fi
    
  build:
    needs: prepare

    runs-on: ubuntu-latest
    if: github.event_name == 'push'


    steps:

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Get current date
        id: date
        run: | 
          echo "::set-output name=date::$(date +'%Y%m%d-%H%M%S')"
      - name: Build Debian Package
        id: build_package
        run: |
          ls
          pwd
          echo ${{steps.date.outputs.date}}
          mkdir src/DEBIAN
          touch src/DEBIAN/control
          touch src/DEBIAN/md5sums
          touch src/DEBIAN/postinst
          
          echo """Package: Valf
          Version: ${{steps.date.outputs.date}}
          Installed-Size: echo $(du -s src/ | cut -f 1)
          Maintainer: Duygu Ölmez, Zeki Ahmet Bayar <bayar.zeki@std.izu.edu.tr>
          Date : $(date)
          Depends: python3-scp, python3-paramiko,python3-pexpect, gir1.2-vte-2.91
          Architecture: amd64
          Description: Valf
            Uzaktan SSH bağlantısı ve dosya transferi aracı.
          """ > src/DEBIAN/control

          echo """
          #!/bin/bash
          python3 /usr/share/valf/bin/valf.py
          """ > src/usr/local/bin/valf
        
          find ./src -type f ! -regex '.*?DEBIAN.*' -exec md5sum {} \; > src/DEBIAN/md5sums
          echo "chmod +x /usr/local/bin/valf" > src/DEBIAN/postinst
          chmod +x src/DEBIAN/postinst
          
          mv src valf-${{steps.date.outputs.date}}
          dpkg-deb -Zgzip --build valf-${{steps.date.outputs.date}}
          
          echo ::set-output name=path::$(pwd)/valf-${{steps.date.outputs.date}}.deb
          echo ::set-output name=filename::valf-${{steps.date.outputs.date}}.deb

      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.date.outputs.date}}
          release_name: ${{steps.date.outputs.date}}
          body: |
            Changes in this Release
            - Print files in current directory
          draft: false
          prerelease: false

      - name: Upload the Debian package to Release Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.build_package.outputs.path }}
          asset_name: ${{ steps.build_package.outputs.filename }}
          asset_content_type: application/vnd.debian.binary-package
